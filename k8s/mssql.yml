---
apiVersion: v1
kind: Namespace
metadata:
  name: mssql
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mssql-configmap
  namespace: mssql
data:
  ACCEPT_EULA: "Y"
  MSSQL_PID: Developer
  SA_PASSWORD: Mssqladmin1!
---
apiVersion: v1
kind: Service
metadata:
  name: mssql-internal-service
  namespace: mssql
spec:
  ports:
  - port: 1433
    protocol: TCP
    targetPort: 1433
  selector:
    app: mssql
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: mssql-external-service
  namespace: mssql
spec:
  ports:
  - nodePort: 31433
    port: 1433
    protocol: TCP
    targetPort: 1433
  selector:
    app: mssql
  type: NodePort
#---
#apiVersion: v1
#kind: PersistentVolume
#metadata:
#  name: mssql-pv
#spec:
#  accessModes:
#  - ReadWriteOnce
#  capacity:
#    storage: 1Gi
#  hostPath:
#    path: /var/persistent/mssql
#  storageClassName: standard
#  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mssql
  namespace: mssql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mssql
  serviceName: mssql-service
  template:
    metadata:
      labels:
        app: mssql
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: mssql-configmap
        name: mssql
        image: mcr.microsoft.com/mssql/server
        ports:
        - containerPort: 1433
#        volumeMounts:
#        - name: mssql-pvc
           # TODO: need to use data volume containers, otherwise the permissions get screwed up
#          mountPath: /var/opt/mssql
#  volumeClaimTemplates:
#  - metadata:
#      name: mssql-pvc
#    spec:
#      accessModes: [ "ReadWriteOnce" ]
#      storageClassName: standard
#      resources:
#        requests:
#          storage: 1Gi
